{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mitulshah/Desktop/Next/pages/detail/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getMovieDetail } from '../../actions';\nimport { Card } from 'antd';\n\nfunction MovieDetail(_ref) {\n  var Poster = _ref.Poster,\n      Title = _ref.Title,\n      imdbRating = _ref.imdbRating,\n      Director = _ref.Director,\n      Language = _ref.Language,\n      Released = _ref.Released,\n      Writer = _ref.Writer,\n      props = _objectWithoutProperties(_ref, [\"Poster\", \"Title\", \"imdbRating\", \"Director\", \"Language\", \"Released\", \"Writer\"]);\n\n  console.log(props);\n  var Meta = Card.Meta;\n  return __jsx(Card, {\n    hoverable: true,\n    style: {\n      width: 240\n    },\n    cover: __jsx(\"img\", {\n      alt: \"example\",\n      src: Poster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Meta, {\n    title: Title,\n    description: \"The movie was directed by \".concat(Director, \" in following \").concat(Language, \" \\n                It was Released on \").concat(Released, \" and writer of this movie is \").concat(Writer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n}\n\nMovieDetail.getInitialProps = function _callee(context) {\n  var id, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.t0 = _regeneratorRuntime;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getMovieDetail({\n            id: id\n          }));\n\n        case 4:\n          _context.t1 = _context.sent.json();\n          _context.next = 7;\n          return _context.t0.awrap.call(_context.t0, _context.t1);\n\n        case 7:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default MovieDetail;","map":{"version":3,"sources":["/Users/mitulshah/Desktop/Next/pages/detail/[id].js"],"names":["getMovieDetail","Card","MovieDetail","Poster","Title","imdbRating","Director","Language","Released","Writer","props","console","log","Meta","width","getInitialProps","context","id","query","json","res"],"mappings":";;;;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,SAASC,WAAT,OASG;AAAA,MARCC,MAQD,QARCA,MAQD;AAAA,MAPCC,KAOD,QAPCA,KAOD;AAAA,MANCC,UAMD,QANCA,UAMD;AAAA,MALCC,QAKD,QALCA,QAKD;AAAA,MAJCC,QAID,QAJCA,QAID;AAAA,MAHCC,QAGD,QAHCA,QAGD;AAAA,MAFCC,MAED,QAFCA,MAED;AAAA,MADIC,KACJ;;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADD,MAESG,IAFT,GAEkBZ,IAFlB,CAESY,IAFT;AAGC,SACI,MAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFX;AAGI,IAAA,KAAK,EAAE;AAAK,MAAA,GAAG,EAAC,SAAT;AAAmB,MAAA,GAAG,EAAEX,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,IAAD;AACI,IAAA,KAAK,EAAEC,KADX;AAEI,IAAA,WAAW,sCAA+BE,QAA/B,2BAAwDC,QAAxD,mDACUC,QADV,0CACkDC,MADlD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAaH;;AAEDP,WAAW,CAACa,eAAZ,GAA8B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,EADkB,GACXD,OAAO,CAACE,KADG,CAClBD,EADkB;AAAA;AAAA;AAAA,2CAEDjB,cAAc,CAAC;AAAEiB,YAAAA,EAAE,EAAFA;AAAF,WAAD,CAFb;;AAAA;AAAA,sCAEuBE,IAFvB;AAAA;AAAA;;AAAA;AAEpBC,UAAAA,GAFoB;AAAA,2CAGnBA,GAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAMA,eAAelB,WAAf","sourcesContent":["import { getMovieDetail } from '../../actions';\nimport { Card } from 'antd';\n\nfunction MovieDetail({\n    Poster,\n    Title,\n    imdbRating,\n    Director,\n    Language,\n    Released,\n    Writer,\n    ...props\n}) {\n    console.log(props);\n    const { Meta } = Card;\n    return (\n        <Card\n            hoverable\n            style={{ width: 240 }}\n            cover={<img alt=\"example\" src={Poster} />}\n        >\n            <Meta\n                title={Title}\n                description={`The movie was directed by ${Director} in following ${Language} \n                It was Released on ${Released} and writer of this movie is ${Writer}`}\n            />\n        </Card>\n    );\n}\n\nMovieDetail.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await (await getMovieDetail({ id })).json();\n    return res;\n};\n\nexport default MovieDetail;\n"]},"metadata":{},"sourceType":"module"}