{"ast":null,"code":"var _jsxFileName = \"/Users/mitulshah/Desktop/Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useReducer } from 'react';\nimport { Card, Avatar } from 'antd';\nimport Link from 'next/link';\nimport { useEffect } from 'react';\nimport { getMovies } from '../actions';\nimport { initialState, reducer } from '../reducer';\nimport { GET_MOVIE_REQUEST, GET_MOVIE, GET_MOVIE_FAILURE } from '../constant';\nexport default function Index() {\n  const {\n    0: movie,\n    1: setMovie\n  } = useState('spiderman');\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  console.log(state);\n  const {\n    Meta\n  } = Card;\n\n  async function getMoviesData() {\n    dispatch({\n      type: GET_MOVIE_REQUEST\n    });\n\n    try {\n      const response = await (await getMovies({\n        movie\n      })).json();\n      dispatch({\n        type: GET_MOVIE,\n        payload: response\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_MOVIE_FAILURE\n      });\n    }\n  }\n\n  useEffect(() => {\n    getMoviesData();\n  }, []);\n  return __jsx(React.Fragment, null, state.data.length > 0 ? state.data.map((item, index) => __jsx(Link, {\n    key: index,\n    href: \"/moviedetail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    style: {\n      width: 300\n    },\n    cover: __jsx(\"img\", {\n      alt: item.Title,\n      src: item.Poster !== \"N/A\" ? item.Poster : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, __jsx(Meta, {\n    title: item.Title,\n    description: `The Movie ${item.Title} was release on ${item.Year}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  })))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"No data found\"));\n}","map":{"version":3,"sources":["/Users/mitulshah/Desktop/Next/pages/index.js"],"names":["React","useState","useReducer","Card","Avatar","Link","useEffect","getMovies","initialState","reducer","GET_MOVIE_REQUEST","GET_MOVIE","GET_MOVIE_FAILURE","Index","movie","setMovie","state","dispatch","console","log","Meta","getMoviesData","type","response","json","payload","error","data","length","map","item","index","width","Title","Poster","Year"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,YAAtC;AACA,SAASC,iBAAT,EAA4BC,SAA5B,EAAuCC,iBAAvC,QAAgE,aAAhE;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,WAAD,CAAlC;AACA,QAAM;AAAA,OAACe,KAAD;AAAA,OAAQC;AAAR,MAAoBf,UAAU,CAACO,OAAD,EAAUD,YAAV,CAApC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWjB,IAAjB;;AAEA,iBAAekB,aAAf,GAA+B;AAC3BJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;;AAGA,QAAI;AACA,YAAMa,QAAQ,GAAG,MAAM,CAAC,MAAMhB,SAAS,CAAC;AAAEO,QAAAA;AAAF,OAAD,CAAhB,EAA6BU,IAA7B,EAAvB;AACAP,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,SADD;AAELc,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAOG,KAAP,EAAc;AACZT,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEV;AADD,OAAD,CAAR;AAGH;AACJ;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI,4BACKL,KAAK,CAACW,IAAN,CAAWC,MAAX,GAAoB,CAApB,GACGZ,KAAK,CAACW,IAAN,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACX,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADX;AAEI,IAAA,KAAK,EAAE;AAAK,MAAA,GAAG,EAAEF,IAAI,CAACG,KAAf;AAAsB,MAAA,GAAG,EAAEH,IAAI,CAACI,MAAL,KAAc,KAAd,GAAqBJ,IAAI,CAACI,MAA1B,GAAiC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,IAAD;AACI,IAAA,KAAK,EAAEJ,IAAI,CAACG,KADhB;AAEI,IAAA,WAAW,EAAG,aAAYH,IAAI,CAACG,KAAM,mBAAkBH,IAAI,CAACK,IAAK,EAFrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ,CADH,GAeG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhBR,CADJ;AAqBH","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport { Card, Avatar } from 'antd';\nimport Link from 'next/link';\nimport { useEffect } from 'react';\nimport { getMovies } from '../actions';\nimport { initialState, reducer } from '../reducer';\nimport { GET_MOVIE_REQUEST, GET_MOVIE, GET_MOVIE_FAILURE } from '../constant';\n\nexport default function Index() {\n    const [movie, setMovie] = useState('spiderman');\n    const [state, dispatch] = useReducer(reducer, initialState);\n    console.log(state);\n    const { Meta } = Card;\n\n    async function getMoviesData() {\n        dispatch({\n            type: GET_MOVIE_REQUEST,\n        });\n        try {\n            const response = await (await getMovies({ movie })).json();\n            dispatch({\n                type: GET_MOVIE,\n                payload: response,\n            });\n        } catch (error) {\n            dispatch({\n                type: GET_MOVIE_FAILURE,\n            });\n        }\n    }\n\n    useEffect(() => {\n        getMoviesData();\n    }, []);\n    return (\n        <>\n            {state.data.length > 0 ? (\n                state.data.map((item, index) => (\n                    <Link key={index} href=\"/moviedetail\">\n                        <Card\n                            style={{ width: 300 }}\n                            cover={<img alt={item.Title} src={item.Poster!==\"N/A\"? item.Poster:\"\"} />}\n                        >\n                            <Meta\n                                title={item.Title}\n                                description={`The Movie ${item.Title} was release on ${item.Year}`}\n                            />\n                        </Card>\n                    </Link>\n                ))\n            ) : (\n                <div>No data found</div>\n            )}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}