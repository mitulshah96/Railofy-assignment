{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/mitulshah/Desktop/Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useReducer } from 'react';\nimport { Card, Avatar } from 'antd';\nimport Link from 'next/link';\nimport { useEffect } from 'react';\nimport { getMovies } from '../actions';\nimport { initialState, reducer } from '../reducer';\nimport { GET_MOVIE_REQUEST, GET_MOVIE, GET_MOVIE_FAILURE } from '../constant';\nexport default function Index() {\n  var _this = this;\n\n  var _useState = useState('spiderman'),\n      movie = _useState[0],\n      setMovie = _useState[1];\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  console.log(state);\n  var Meta = Card.Meta;\n\n  function getMoviesData() {\n    var response;\n    return _regeneratorRuntime.async(function getMoviesData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: GET_MOVIE_REQUEST\n            });\n            _context.prev = 1;\n            _context.t0 = _regeneratorRuntime;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(getMovies({\n              movie: movie\n            }));\n\n          case 5:\n            _context.t1 = _context.sent.json();\n            _context.next = 8;\n            return _context.t0.awrap.call(_context.t0, _context.t1);\n\n          case 8:\n            response = _context.sent;\n            dispatch({\n              type: GET_MOVIE,\n              payload: response\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t2 = _context[\"catch\"](1);\n            dispatch({\n              type: GET_MOVIE_FAILURE\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  }\n\n  useEffect(function () {\n    getMoviesData();\n  }, []);\n  return __jsx(React.Fragment, null, state.loading ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Loading\") : __jsx(React.Fragment, null, state.data.Search.map(function (item, index) {\n    return __jsx(Link, {\n      key: index,\n      href: \"/moviedetail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, __jsx(Card, {\n      style: {\n        width: 300\n      },\n      cover: __jsx(\"img\", {\n        alt: item.Title,\n        src: item.Poster,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, __jsx(Meta, {\n      title: item.Title,\n      description: \"The Movie \".concat(item.Title, \" was release on \").concat(item.Year),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    })));\n  })));\n}","map":{"version":3,"sources":["/Users/mitulshah/Desktop/Next/pages/index.js"],"names":["React","useState","useReducer","Card","Avatar","Link","useEffect","getMovies","initialState","reducer","GET_MOVIE_REQUEST","GET_MOVIE","GET_MOVIE_FAILURE","Index","movie","setMovie","state","dispatch","console","log","Meta","getMoviesData","type","json","response","payload","loading","data","Search","map","item","index","width","Title","Poster","Year"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,YAAtC;AACA,SAASC,iBAAT,EAA4BC,SAA5B,EAAuCC,iBAAvC,QAAgE,aAAhE;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACFZ,QAAQ,CAAC,WAAD,CADN;AAAA,MACrBa,KADqB;AAAA,MACdC,QADc;;AAAA,oBAEFb,UAAU,CAACO,OAAD,EAAUD,YAAV,CAFR;AAAA,MAErBQ,KAFqB;AAAA,MAEdC,QAFc;;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAH4B,MAIpBI,IAJoB,GAIXjB,IAJW,CAIpBiB,IAJoB;;AAM5B,WAAeC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIJ,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEZ;AADD,aAAD,CAAR;AADJ;AAAA;AAAA;AAAA,6CAKsCH,SAAS,CAAC;AAAEO,cAAAA,KAAK,EAALA;AAAF,aAAD,CAL/C;;AAAA;AAAA,wCAK4DS,IAL5D;AAAA;AAAA;;AAAA;AAKcC,YAAAA,QALd;AAMQP,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEX,SADD;AAELc,cAAAA,OAAO,EAAED;AAFJ,aAAD,CAAR;AANR;AAAA;;AAAA;AAAA;AAAA;AAWQP,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEV;AADD,aAAD,CAAR;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBAN,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI,4BACKL,KAAK,CAACU,OAAN,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,GAGG,4BACKV,KAAK,CAACW,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP;AAAA,WAEnB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADX;AAEI,MAAA,KAAK,EACD;AAAK,QAAA,GAAG,EAAEF,IAAI,CAACG,KAAf;AAAsB,QAAA,GAAG,EAAEH,IAAI,CAACI,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,MAAC,IAAD;AACI,MAAA,KAAK,EAAEJ,IAAI,CAACG,KADhB;AAEI,MAAA,WAAW,sBAAeH,IAAI,CAACG,KAApB,6BAA4CH,IAAI,CAACK,IAAjD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CAFmB;AAAA,GAAtB,CADL,CAJR,CADJ;AA0BH","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport { Card, Avatar } from 'antd';\nimport Link from 'next/link';\nimport { useEffect } from 'react';\nimport { getMovies } from '../actions';\nimport { initialState, reducer } from '../reducer';\nimport { GET_MOVIE_REQUEST, GET_MOVIE, GET_MOVIE_FAILURE } from '../constant';\n\nexport default function Index() {\n    const [movie, setMovie] = useState('spiderman');\n    const [state, dispatch] = useReducer(reducer, initialState);\n    console.log(state);\n    const { Meta } = Card;\n\n    async function getMoviesData() {\n        dispatch({\n            type: GET_MOVIE_REQUEST,\n        });\n        try {\n            const response = await (await getMovies({ movie })).json();\n            dispatch({\n                type: GET_MOVIE,\n                payload: response,\n            });\n        } catch (error) {\n            dispatch({\n                type: GET_MOVIE_FAILURE,\n            });\n        }\n    }\n\n    useEffect(() => {\n        getMoviesData();\n    }, []);\n    return (\n        <>\n            {state.loading ? (\n                <div>Loading</div>\n            ) : (\n                <>\n                    {state.data.Search.map((item, index) => (\n                        \n                        <Link key={index} href=\"/moviedetail\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                    <img alt={item.Title} src={item.Poster} />\n                                }\n                            >\n                                <Meta\n                                    title={item.Title}\n                                    description={`The Movie ${item.Title} was release on ${item.Year}`}\n                                />\n                            </Card>\n                        </Link>\n                    ))}\n                </>\n            )}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}